Python


Day02
    刘雅楠
        小沐 艺名
        北京 8周
        python 基础 -- 语法
            4周 第四周周五考试
            4周
                2周 web html linux 操作系统（虚拟机 软件） git（代码管理器）数据库（MySQL，Mongodb[key:value] Redis[key:value}) 周五考试

        python 发展方向
            web后台 --->
                安卓 -- 显示数据
                苹果
                网页
            后台 会给前端提供一个接口
                新闻列表 20条新闻
                page=2 ----> 给后台服务器传递 ----> 接受到请求 ----> 去数据库中查询 如果有数据 则将数据返回给前端 ----> 前端根据数据的格式显示在页面上

            python 爬虫
                 ----> 爬取数据
            python 数据分析 ----> 大数据方向

        学习的注意事项
            刚开始接触这个行业
                学 ----> 先按照我的逻辑来
                    没有捷径
                        敲代码 ----> 熟悉键盘 建议：多敲 忌看不敲
                        入门者
                            第一遍：注释，写出这段代码的作用，把这段代码敲一遍
                            第二遍：注释，自己写功能
                            第三遍：自己从头到尾，注释+代码
                        初学者
                            上课讲的能听懂，下课自己写的时候不会
                        基础者
                            切忌好高骛远
                        有问题，提出问题，不要堆积问题，有时间的话，复习前面讲的内容
        组长
            晚上收作业，手机组内学员的问题
        踏实基础
            准备纸和笔，每天听写上一节课的内容
            每个人都交，差的惩罚，2遍，如果我听写的没交，5遍
        工具Typora
            可以百度相关工具的使用方式

    大纲介绍
        Python基础的课程纲要
            第一周
                计算机简单的了解
                    进制的转换
                    补码原码反码
                python发展史
                python环境的安装
                python基础知识
                    变量 ----> 数据是变化的
                        天气的温度：28
                                38
                        设定一个容器 来存放变化的内容
                            变量
                                degree = 28
                                degree = 38

                    标识符 声明名字的时候注意事项和名字的组成
                    数据类型
                        吴 小 丁
                        多个字符拼接在一起的数据称之为字符
                    流程语句
                        分支语句
                        判断语句
                        循环语句
                            循环：重复的做一件事
                                猜字游戏
                                    系统随机生成一个数据A
                                    用户输入一个数据B
                                    将这两个数据比较大小

                                    B > A / B < A ...用户得去重新猜
                    函数：方法
                        封装的使用
                        需求：
                            求原的面积 π * r ** 2

        计算机的基本常识
            计算机的基本结构
                冯诺伊曼提出计算机包含5部分：输入设备 输出设备 存储器 运算器和控制器
                输入设备：向计算机中输入数据的 键盘 鼠标
                输出设备：将信息输出给用户 显示器 音响
                处理：CPU --- 中央处理单元，也叫做处理器，控制计算机的运算和操作核心，相当于人的大脑
                内存：运行内存 负责硬盘等硬件上的数据与CPU进行交互的 缓存的是系统中的临时数据
                硬盘：数据仓库 在硬盘上存储的数据具有持久性
                显卡：显示器显示画面 显卡就是关键
            软件开发
                开发：制作
                软件：按照特定的顺序组织的计算机数据以及执行数据指令的集合
                分类：系统软件 和 应用软件
                    系统软件：
                        操作系统软件：windows，mac os，linux
                    应用软件：
                        聊天软件
                        游戏软件
                        商城软件
            计算机数据处理
                计算机是来运行数据的，数据在计算机中的存储格式是：二进制
                进制的概念：
                    进位制，人们指定的一种进位方式，生活中的常用的是十进制
                        逢十进一
                            十进制的符号集：0 1 2 3 4 5 6 7 8 9
                            0 1 2 3 4 5 6 7 8 9 10 11 ...
                为什么计算机采用二进制？？？
                    二进制位
                        逢二进一
                            二进制的符号集：0 1
                            0 1
                    在计算机中运行的时候，数据只有01
                        10101000111000
                        01010100000011
                    十进制，二进制对比转换
                    二进制：0   1    10  11  100 10000
                    十进制：0   1     2   3   4    8
                常见的进制：二进制、八进制、十进制、十六进制
                    八进制：
                        逢八进一
                            八进制的符号集：0 1 2 3 4 5 6 7 8 9
                    十六进制：
                        逢十六进一
                            十六进制的符号集：0 1 2 3 4 5 6 7 8 9 A B C D E F （不区分大小写）
                进制的转换：
                    二进制转换成十进制
                        按权展开求和
                            十进制：12345  === 1*10^4 + 2*10^3 + 3*10^2 + 4*10^1 + 5*10^0
                                          === 10000  + 2000   + 300    + 40     + 5
                            按权展开：对应位上的数据 * 对应进制的基数^(位数-1)
                            二进制：101010 === 1*2^5 + 0*2^4 + 1*2^3 + 0*2^2 + 1*2^1 + 0*2^0
                                          === 32    + 0     + 8     + 0     + 2     + 0
                            二进制：111111 === 1 + 2 + 4 + 8 + 16 + 32       （称之为8421转化码 -- 可以详细了解下，什么是8421）
                            按权展开：在转换为十进制的时候 为0的位 直接就是0 如果是为1的 对应的十进制数据2^(位数-1)
                    二进制转换成八进制
                        八进制符号集：0 1 2 3 4 5 6 7
                            最大数值是7
                        二进制中几位才可以置为7 ---> 3
                            111 ---> 7
                        转换规则：
                            将二进制数 从右向左三三一分 如果左边不足三位 补0 将每一份按权展开求和 最后将每一份的和拼接在一起 结果就是八进制
                            Binary: 001 101 101 110 111
                                    1   5   5   6   7
                                15567 -- 八进制
                        八进制的符号0o
                        二进制的符号0b/0B
                        十六进制符号0x/0X
                        什么符号赌不加默认是十进制数据
                    二进制转换成十六进制
                        0b10000
                            0b1111
                            二进制中需要4位才可以到达十六进制的最大符号集
                        转换规则
                            将二进制数 从右向左四四一分 如果左边不足四位 补0 将每一份按权展开求和 最后将每一份的和拼接在一起 结果就是十六进制
                            0b  0001    1011    1011    1101
                                1       b       b       d
                            0x1bbd
                    练习
                        二进制转换为十进制
                            0b101010001  可利用8421编码
                            337
                        二进制转化为八进制
                            0b101111001
                            0o571
                        二进制转化为十六进制
                            0b11001111011110110
                            0x19EF6
                        八进制/十六进制 ---> 十进制：
                            按权展开求和
                            0o2357 ---> 2*8^3 + 3*8^2 + 5*8^1 + 7*8^0
                            0xa891 ---> 10*16^3 + 8*16^2 + 9*16^1 + 1*16^0
                        十进制转换成二进制
                            基本转换规则：
                                整数部分除以2取余/除到商为0即可，再将余数倒序取出
                                小数部分 乘以2取整 再将小数部分乘以2取整 一直到小数部分为0位置 将整数正序取出
                                8421转换方式：
                                    69 ---> 64
                                    5  ---> 4
                                    1  ---> 1
                                    1000101
                                十进制转二进制示例
                                    69      ---> 0b1000101
                                    0.125   ---> 0.001
                                    125.75  ---> 1111101.11
                        八进制/十六进制转化为二进制
                            将二进制转化为八进制/十六进制的过程逆向执行
                                0o7521
                                    ---> 0b 111 101 010 001
                                0xa5e2
                                    ---> 0b 1010 0101 1110 0010
                        编码规则
                            在计算机中数据存储 运算是通过二进制形式来完成的
                            数据存储
                                现在计算机中存储一个符号a
                                    假设a对应的二进制数据是 001
                                想存一个b
                                    二进制数 010
                                c -- 011
                                想存储 abc
                                    001010011
                                现实生活中采用的数据 以十进制为主 出现数据转换的过程 可以参考wiki了解下详情
                                    001 ---> 1 ---> a
                                    010 ---> 2 ---> b
                                    011 ---> 3 ---> c
                                这种将符号转化为十进制数据 再将十进制数据转化为二进制数据这种方式 编码方法：ascii
                                常用的符号在计算机中二进制存储的方式指定的规则 这种规则称之为编码
                                0   --- 表示的是十进制数据0
                                '0' --- 表示的是一个符号而不是十进制的数据了 在计算机中对应的二进制数据是 ?? 根据编码规则找到十进制数据 ---> 48 ---> 二进制
                                ASCII 美国信息交换表中的编码规范而言：
                                    符号0 --> 48
                                    符号A --> 65
                                    符号a --> 97
                                中国符号加入到编码表中对应的编码方式gbk unicode(utf-8) 这两种编码方式都是在信息交换表的基础上进行设计的
                                    gbk 和 unicode的区别
                                        针对于汉字的区别
                                            在gbk编码的格式下 一个汉字占两个字节 2B
                                            在unicode 编码下 一个汉字占三个字节 3B
                                        英文符号 一个符号就占一个字节
                                在计算机中数据的最小单位是位(b-bit) 比特 一个0或者一个1代表1b
                                计算机中的数据运行单位是字节(B-Byte)
                                    字节和位之间的换算 1B = 8b
                                        一个字节可以存储2^8个数据 不区分符号的数据为例 数据的取值是从0-255
                                        区分正负的情况下 1个字节的整数取值 -128-127
                                原码 反码 补码
                                原码 反码 补码表示的是二进制的一种格式
                                存储数据 --- 为了进行运算数据 数据是分为正负
                                在存储数据的基础上 以二进制数据的最高位位符号位 0 表示的是正数 1表示的是负数
                                内存：缓存数据的
                                在计算机中存储数据的时候 先在计算机的内存中开辟一块空间 再将数据存放在空间中
                                10 -- 整型数据 在内存中开辟了4B的内存 32位
                                    0000 0000 0000 0000 0000 0000 0000 1010
                                查看最高位的时候 看该数据开辟的字节数 字节数确定 该数据在计算中存储的位数就确定了 --> 最高位数就确定了
                                以8位为例
                                    10 + (-11) ---> 保证数据的准确性 ---> 运算的时候二进制的存储格式是什么
                                正数
                                    原码 反码 补码 格式是一样的 直接就是将十进制转化为二进制的格式
                                    正数：
                                        10
                                            原码：0000 1010
                                            反码：0000 1010
                                            补码：0000 1010
                                负数
                                    负数：
                                        原码：在正数原码的基础上 将最高位置为1
                                        反码：在负数原码的基础上 除了最高位 其余位按位取反（0变1 1变0）
                                        补码：在负数反码的基础上 +1
                                        -10：
                                            原码：1000 1010
                                            反码：1111 0101
                                            补码：1111 0110
                                如果想查看一个二进制数据表示的十进制数据时 查看的是二进制的原码
                                假设：计算机运算的时候 采用的二进制的原码形式来进行运算的
                                    2 + (-1)
                                    以八位为例
                                        0000 0010
                                        1000 0001
                                        ---------
                                        1000 0011(原码) ----> -3[不正确]
                                假设：计算机运算的时候 采用的是二进制的反码形式来进行运算的
                                    2 + (-1)
                                    以八位为例
                                        0000 0010
                                        1111 1110
                                        ---------
                                       10000 0000(反码) ----> 0【不正确] [这里1超过8b的容器 溢出 舍弃不要了]
                               假设：计算机运算的时候 采用的是二进制的补码形式来进行运算的
                                    2 + (-1)                                2 + (-1)
                                    以八位为例
                                        0000 0010
                                        1111 1111
                                        ---------
                                       10000 0001(补码) ----> 1[正确] [这里1超过8b的容器 溢出 舍弃不要了]
                               由上述三种假设，例证了计算机中二进制数据运算时采用的是补码的形式
                               -11 + 5
                                    原码：1000 1011
                                    反码：1111 0100
                                    补码：1111 0101
                                    转换：0000 0101
                                    --------------
                                    结果：1111 1010(补码) ----> -1 === 1111 1001 ----> 取反 === 1000 0110 ----> -6
                                练习：
                                    以8位为例
                                         72  + 23
                                        -29  + 41
                                        -22  + 11
                                        -110 - 18
                                            -110的原码：
                                                64 + 32 + 8 + 4 + 2
                                                原码：1110 1110
                                                反码：1001 0001
                                                补码：1001 0010
                                            -18的原码：
                                                16 + 2
                                                原码：1001 0010
                                                反码：1110 1101
                                                补码：1110 1110

                                                1001 0010
                                                1110 1110
                                                ---------
                                               11000 0000(补码) ----> 1111 1111 ----> 1000 0000(-0)
                                           +0 0000 0000
                                           -0 1000 0000

                                           1B数据取值256个 正数是128个 负数是128个
                                                0～127
                                                -127～-0
                                                规定：-0 默认为-128
                                        -115 - 20
                                            8 位中
                                                -129 ====> 127
                                                -130 ====> 126
                                                -131 ====> 125
                                                -132 ====> 124
                                                以此类推

                                            -115
                                                原码：1111 0011
                                                反码：1000 1100
                                                补码：1000 1101
                                            -20
                                                原码：1001 0100
                                                反码：1110 1011
                                                补码：1110 1100
                                            1000 1101
                                            1110 1100
                                            ---------
                                           10111 1001(补码) ----> 1 + 8 + 16 + 32 + 64 = 121
                            常用DOS命令
                               人机交互
                                有两种：图形界面交互 和 通过指令来交互
                                软件的出现更好的体现了人机交互
                                指令来交互：
                                    需要控制台：
                                            win标键+r  再输入 cmd 调取控制台界面
                                                再控制台上输入计算机识别的指令 使计算机根据这些指令完成对应的交互
                                                常用的命令(全部都是英文输入，回车是结束命令的输入,且不区分大小写):
                                                    操作目录时 目录名称按tab键可以自动补全
                                                    切换盘符：D:
                                                想在控制台上打开指定目录(文件夹)必须在文件夹所在的根目录下才可以打开
                                                打开指定文件夹：
                                                    cd 文件夹目录
                                                    cd .. 返回上以级目录
                                                    cd / 直接返回根目录
                                                展示该目录下面的子目录
                                                    dir 显示子目录或者子文件(不包含隐藏文件)
                                                    dir /a 将所有文件都显示出来(包含隐藏文件)
                                                    dir /ah 仅仅将隐藏文件显示出来
                                                打开指定文档
                                                    切换到该文件所在的目录
                                                        直接写文件名即可打开
                                                创建文件夹
                                                    md(make directory) 文件夹目录 创建文件夹 可以创建一级/多级目录
                                                删除文件夹
                                                    rd 目录名称
                                                        要求：只能删除空目录
                                                显示指定文件的内容
                                                    type 文件路径
                                                创建文件并将内容写入到文件
                                                    echo 内容 > 文件路径(存在文件则覆盖，不存在则新建)
                                                    echo 内容 >> 文件路径 拼接文件内容
                                                删除文件
                                                    del 文件路径
                                                    del *.* 将当前文件夹中所有文件全部删除
                                                清屏
                                                    cls 清除屏幕文字
                                                拷贝文件(只能拷贝文件 不能拷贝文件夹)
                                                    copy 原文件路径 目的文件路径
                                                    拷贝的时候针对于文件内容的操作
                                                剪切文件
                                                    move 源文件路径 目的文件路径
                                               退出控制台
                                                    exit
                            计算机语言


    day03(2018/06/13)
        1、將十進制轉化為二進制
            55
                    32
                23  16
                7   4
                3   2
                1   1
                    0011 0111
            49.125
                49  32
                17  16
                1   1
                    0011 0001

                0.25---->0
                0.5----->0
                1.0----->1
                    0011 0001.001
        2、將二進制轉化為八進制
            0b101 101 001 110
                5 5   1   6
            0o5516
        3、將二進制轉化為十六進制
            0b1101  1101    1011    1001
                d   d       b       9
            0xddb9
        4、以8位為例 對下列數據進行運算【需要過程】
            59+28
                59: 32 + 16 + 8 + 2 + 1
                    0011 1011
                28: 16 + 8 + 4
                    0001 1100
                    0011 1011

                        0101 0111 ===> 64 + 16 + 4 + 2 + 1 = 87
            66-41
                66: 64 + 2 ====> 0100 0010
               -41: -(32 + 8 + 1)
                    ===> 1010 1001 ====> 1101 0110 ====> 1101 0111
                                                        0100 0010
                1 0001 1001 = 25

            77-99
                77: 64 + 8 + 4 + 1 ====> 0100 1101
               -99: -(64 + 32 + 2 + 1) ====> 1110 0011 ====> 1001 1100 ====> 1001 1101
                0100 1101
                1001 1101
                1110 1010(補碼) --> 1110 1001(反碼) --> 1001 0110 ==> -(16 + 4 + 2) = -22
        計算機語言
            计算机中的数据是通过二进制的形式存储运算的，与计算机交互的时候完成我们需要的运算操作
            制定了一套与计算机进行交互的语法规则，这套语法规则称之为变成语言
            学习语言 首先学习的是语法规则
            常见的编程语言：
                C语言
                C++
                OC-Objective-C -> iOS（苹果系统软件开发的语言）
                java(服务器语言 后台语言) -> Android语言的基础
                php
                javaScript
                Python
        Python语言的历史
            1989年出现的"硅叔"
            第一个版本 1991年发行的 底层实现是由C语言来完成的
            1999年才支持web开发的
            2000年前 出现一个版本 2.0, 并出现了一个支持web开发的框架Django
            08年2.6版本
            08年3.0版本(不兼容2.x的)
            10年 出现了一个2.7(相当于2.x与3.x的过渡版)
            现在的最新版本3.7
            python 官方声明2.x的最多支持到2020年就不再对2.x的版本维护了
            学习的是3.x版本
        Python环境的安装
            电脑32位和64位的区别：
                CPU一次性处理数据的能力32bit还是64bit
                对应到内存中的数据：
                    32位 最大寻址空间：2^32[4G] 真正的数据存放 3.7G
                    64b的话 最大寻址空间2^64    4G
        Python程序初体验
            path環境變量的設置:
                為了不管在哪個目錄下面都可以隨時進入到python環境
            設置path變量的好處和使用情況:
                在控制台上查找文件的時候，現在path變量裡面查找路徑 如果有直接使用
                如果沒有，會在控制台當前路徑下進行查找 如果還沒有 提示不是內部或者外部命令[找不到]
            設置方法:
                windows:我的電腦->右擊->屬性->高級系統設置->環境變量->系統變量/用戶變量->path[注意不要把原來的內容去除掉 要進行拼接
                -> 用英文情況下的分號分隔每個路徑，添加上python.exe所在的路徑和pip.exe所在路徑[scripts]->三個確定
            python 進入環境
            exit() 退出環境
            編輯python文件的編輯器
                可以使用python自帶的編輯器 IDLE

            Python基本语法
                入门仪式：hello world
                    print('hello world!')
                变量
                标识符
                注释
                数据类型
                用户输入
                类型转换
                运算符






